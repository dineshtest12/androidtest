apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "io.mironov.smuggler"
apply plugin: 'com.google.gms.google-services'

android {
    Version version = readVersion()

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.isuncloud.ott"
        testApplicationId "com.test.ott"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode version.versionCode.toInteger()
        versionName version.versionName

        archivesBaseName = rootProject.name + "_" + versionName

        // Enabling multidex support.
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
    }

    kapt {
        correctErrorTypes = true
        // Exporting schema into this folder whenever db version change
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }

    androidExtensions {
        experimental = true
    }

    flavorDimensions "mode"

    productFlavors {
        staging {
            dimension "mode"
            applicationId = "com.isuncloud.ott.staging"
            buildConfigField 'String', 'ServerUrl', '"http://54.255.246.75:3001"'
            buildConfigField 'String', 'NodeUrl', '"http://192.168.2.83:3010"'
            buildConfigField 'String', 'Web3Url', '"http://192.168.2.83:8547"'
            buildConfigField 'String', 'ApiUrl', '"http://192.168.2.4"'
            versionNameSuffix "-staging"
        }
        production {
            dimension "mode"
            applicationId = "com.isuncloud.ott"
            buildConfigField 'String', 'ServerUrl', '"http://54.255.246.75:3001"'
            buildConfigField 'String', 'NodeUrl', '"http://192.168.2.83:3010"'
            buildConfigField 'String', 'Web3Url', '"http://192.168.2.83:8547"'
            buildConfigField 'String', 'ApiUrl', '"http://192.168.2.4"'
        }
    }

    buildTypes {
        debug {
            zipAlignEnabled true
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        // Use JDK 8 to support Lambda
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kapt {
        correctErrorTypes = true
        // Exporting schema into this folder whenever db version change
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }

    dexOptions {
        preDexLibraries true
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Hybroad Packet Library
    implementation files('libs/hypacketlib.jar')

    // React Native
    implementation "com.facebook.react:react-native:0.55.4"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // MultiDex
    implementation 'androidx.multidex:multidex:2.0.0'

    // Support
    implementation "androidx.legacy:legacy-support-v4:$androidx_version"
    implementation "androidx.appcompat:appcompat:$androidx_version"
    implementation "com.google.android.material:material:$androidx_version"
    implementation "androidx.recyclerview:recyclerview:$androidx_version"
    implementation "androidx.cardview:cardview:$androidx_version"
    implementation "androidx.leanback:leanback:$androidx_version"

    // Constraint Layout
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'

    // Lifecycle
    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.0.0'

    // Room
    implementation 'androidx.room:room-runtime:2.0.0-rc01'
    kapt "androidx.room:room-compiler:2.0.0-rc01"

    // Dagger
    implementation 'com.google.dagger:dagger:2.16'
    kapt 'com.google.dagger:dagger-compiler:2.16'
    implementation 'com.google.dagger:dagger-android:2.16'
    kapt "com.google.dagger:dagger-android-processor:2.16"
    implementation 'com.google.dagger:dagger-android-support:2.16'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    // RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.16'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    // RxRelay for RxBus
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'

    // JSR-310
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // Firebase
    implementation 'com.google.firebase:firebase-core:16.0.3'
    implementation 'com.google.firebase:firebase-analytics:16.0.3'
    implementation 'com.google.firebase:firebase-firestore:17.1.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.7.1'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer:2.7.0'
    implementation 'com.google.android.exoplayer:extension-leanback:2.6.1'

    // Web3j
    implementation 'org.web3j:core:3.3.1-android'

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test:rules:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'

    // Stetho (for debug)
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-js-rhino:1.5.0'
}

class Version {
    def versionCode
    def versionName
}

Version readVersion() {
    Properties defaultVersionProps = new Properties()
    defaultVersionProps.load(new FileInputStream(file('version.properties')))
    def defaultBuildVersionCode = defaultVersionProps['VERSION_CODE']
    def defaultBuildVersionName = defaultVersionProps['VERSION_NAME_PREFIX'] + "." + defaultVersionProps['VERSION_NAME_BUILD']

    return new Version(versionCode: defaultBuildVersionCode, versionName: defaultBuildVersionName)
}

def increaseVersion() {
    Properties versionProps = new Properties()

    def file = file('version.properties')
    versionProps.load(new FileInputStream(file))

    def nextCode = versionProps['VERSION_CODE'].toInteger() + 1
    versionProps['VERSION_CODE'] = nextCode.toString()
    def nextBuild = versionProps['VERSION_NAME_BUILD'].toInteger() + 1
    versionProps['VERSION_NAME_BUILD'] = nextBuild.toString()
    versionProps.store(file.newWriter(), null)

    def buildVersionCode = versionProps['VERSION_CODE']
    def buildVersionName = versionProps['VERSION_NAME_PREFIX'] + "." + versionProps['VERSION_NAME_BUILD']

    println "Increase $buildVersionName"
}

task increaseVersion {
    doLast {
        increaseVersion()
    }
}


